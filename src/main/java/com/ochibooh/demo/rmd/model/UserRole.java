package com.ochibooh.demo.rmd.model;import com.fasterxml.jackson.annotation.JsonFormat;import lombok.Data;import lombok.EqualsAndHashCode;import lombok.ToString;import org.hibernate.annotations.CreationTimestamp;import org.hibernate.annotations.DynamicUpdate;import org.hibernate.annotations.UpdateTimestamp;import javax.persistence.*;import java.io.Serializable;import java.sql.Timestamp;@ToString@Data@EqualsAndHashCode(of = {"id"})@DynamicUpdate@Entity@Table(name = "CONFIG_USER_ROLE", uniqueConstraints = {        @UniqueConstraint(name = "CONFIG_USER_ROLE_ID", columnNames = {"ID"}),        @UniqueConstraint(name = "CONFIG_USER_ROLE_USER_ON_ROLE", columnNames = {"CONFIG_USER", "CONFIG_ROLE"}),})public class UserRole implements Serializable {    @Id    @GeneratedValue(strategy = GenerationType.IDENTITY)    @Column(name = "ID", nullable = false, updatable = false)    private Long id;    @ManyToOne(optional = false)    @JoinColumn(name = "CONFIG_USER", referencedColumnName = "ID", nullable = false, updatable = false, foreignKey = @ForeignKey(name = "CONFIG_USER_ROLE_CONFIG_USER"))    private User user;    @ManyToOne(optional = false)    @JoinColumn(name = "CONFIG_ROLE", referencedColumnName = "ID", nullable = false, updatable = false, foreignKey = @ForeignKey(name = "CONFIG_USER_ROLE_CONFIG_ROLE"))    private Role role;    @Basic    @Column(name = "STATUS", nullable = false)    private Integer status;    @Basic    @CreationTimestamp    @JsonFormat(pattern = "dd-MMM-yyyy HH:mm:ss")    @Column(name = "CREATION_DATE", nullable = false)    private Timestamp creationDate;    @Basic    @UpdateTimestamp    @JsonFormat(pattern = "dd-MMM-yyyy HH:mm:ss")    @Column(name = "UPDATE_DATE", nullable = false)    private Timestamp updateDate;}