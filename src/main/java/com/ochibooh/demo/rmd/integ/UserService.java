package com.ochibooh.demo.rmd.integ;import com.ochibooh.demo.rmd.model.Role;import com.ochibooh.demo.rmd.model.User;import com.ochibooh.demo.rmd.model.UserRole;import com.ochibooh.demo.rmd.repo.RoleRepository;import com.ochibooh.demo.rmd.repo.UserRepository;import com.ochibooh.demo.rmd.repo.UserRoleRepository;import lombok.extern.java.Log;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.lang.NonNull;import org.springframework.stereotype.Service;import java.util.concurrent.atomic.AtomicBoolean;import java.util.concurrent.atomic.AtomicReference;import java.util.logging.Level;@Log@Servicepublic class UserService {    @Autowired    private UserRepository userRepository;    @Autowired    private RoleRepository roleRepository;    @Autowired    private UserRoleRepository userRoleRepository;    public boolean createUser(@NonNull String firstName, String lastName, @NonNull Role role) {        AtomicBoolean res = new AtomicBoolean();        this.roleRepository.findById(role.getId()).ifPresentOrElse(myRole -> {            if (myRole.getStatus().compareTo(1) == 0) {                AtomicReference<User> user = new AtomicReference<>(new User());                user.get().setFirstName(firstName.trim());                if (lastName != null && !lastName.isEmpty()) {                    user.get().setLastName(lastName.trim());                }                user.get().setStatus(1);                user.set(this.userRepository.save(user.get()));                log.log(Level.INFO, String.format("User created [ %s ]", user.get()));                this.userRoleRepository.findByUserAndRole(user.get(), myRole).ifPresentOrElse(userRole -> {                    /* todo :: user already assigned this role */                }, () -> {                    AtomicReference<UserRole> userRole = new AtomicReference<>(new UserRole());                    userRole.get().setUser(user.get());                    userRole.get().setRole(myRole);                    userRole.set(this.userRoleRepository.save(userRole.get()));                    log.log(Level.INFO, String.format("User role created [ %s ]", userRole.get()));                });            } else {                /* todo:: role not active. 1 - active  */            }        }, () -> {            /* todo:: role not found  */        });        return res.get();    }}