package com.ochibooh.demo.rmd.handler;import com.ochibooh.demo.rmd.data.http.request.user.UserCreateRequest;import com.ochibooh.demo.rmd.data.http.response.user.UserCreateResponse;import com.ochibooh.demo.rmd.integ.UserService;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.http.MediaType;import org.springframework.http.ResponseEntity;import org.springframework.security.access.prepost.PreAuthorize;import org.springframework.web.bind.annotation.RequestBody;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.RestController;import reactor.core.publisher.Mono;@RestController@RequestMapping(        path = {"/user"})public class UserHandler {    @Autowired    private UserService userService;    @PreAuthorize(value = "hasAnyAuthority('CREATE_USER')")    @RequestMapping(            path = "/create",            consumes = MediaType.APPLICATION_JSON_VALUE,            produces = MediaType.APPLICATION_JSON_VALUE    )    public Mono<ResponseEntity<UserCreateResponse>> create(            @RequestBody UserCreateRequest body    ) {        if (this.userService.createUser(body.getFirstName(), body.getLastName(), body.getEmail(), body.getPassword(), body.getRole())) {            return Mono.just(ResponseEntity.ok().body(UserCreateResponse.builder().message("Success").build()));        } else {            return Mono.just(ResponseEntity.internalServerError().body(UserCreateResponse.builder().message("Sorry, an error occured").build()));        }    }}